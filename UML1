
# UML作业
- 20182123030
- 汤海康
# 用例名称：Github网站
- 用户注册账号，登录进网站，进行学习交流、分享资源
## 用例参与者：
- 用户、管理员
### 元素：
- 用户注册、用户登录、用户管理、搜索、问题、市场、储存库、验证、密码找回、修改个人信息、查看个人信息、后台数据库、创建数据仓库、查找、文件管理、储存库管理
#### 关系：
- 验证是用户注册的扩展；用户登录包含用户注册；密码找回是用户登录的扩展；修改个人信息、查看个人信息是用户管理的扩展；用户管理、搜索、问题、市场、储存库是后台数据库的扩展；创建数据仓库、查找、文件管理、储存库管理是储存库的扩展。
##### 思路：
- 1.登录账号:
  无账号则进行账号注册，并验证;
  如果用户名号密码输入正确则登陆成功，跳转至主页面;
  如果用户名号或密码错误则提示用户名或密码错误;
  忘记密码可根据用户绑定邮箱进行修改密码
- 2.进入主页面:
  可使用用户管理、储存库、搜索、市场、问题等功能
- 3.用户管理
  可以对用户信息进行查看、修改........
- 4.储存库:
  进入储存库主界面可进行创建储存库、查找文件、对文件进行管理、储存库管理等功能

# 用例名称：储存库
- 用户运用储存库
## 用例参与者：
- 用户
### 元素：
- 代码、问题、拉取请求、动作、项目、维基百科、安全、洞察力、设置、转到文件、添加文件、新建文件、上传文件、保存文件代码、筛选问题、新建问题、筛选请求、新建请求、设置工作流程、建立项目、选择、管理访问、安全与分析、审核设置
#### 关系：
- 转到文件、添加文件、保存代码文件是代码的扩展；添加文件包含新建文件、上传文件；筛选问题、新建问题是问题的扩展；筛选请求、新建请求是拉取请求的扩展；设置工作流程是动作的扩展；建立项目是项目的扩展；选择、管理访问、安全与分析、审核设置是设置的扩展
##### 思路：
- 用户登录成功后进入储存库页面可进行以下操作:
- 1.代码:
  用户新建文件或上传文件后，对文件中的代码进行修改操作
- 2.问题:
  用户遇到问题可发表新问题，请求其他用户解决；可在问题中贴标签;
  问题解决后可将其他用户解雇
- 3.拉去请求:
  创建新的拉取，拉取其他用户共同完成代码创建;
  代码完成后可将其他用户解雇
- 4.动作:
  生成，测试和部署您的代码。使代码审查，分支机构管理和问题分类工作按您想要的方式进行。选择一个工作流程- 模板以开始使用。
- 5.项目:
  在GitHub上设置一个项目委员会，以简化和自动化您的工作流程。
- 6.维基百科:
  Wiki在用户资源库中提供了一个放置项目路线图，显示当前状态并更好地记录软件的位置。
- 7.安全:
  用户选择安全政策、查看安全公告、设置Dependabot警报、代码扫描警报
- 8.洞察力:
  查看用户之间的联系
- 9.设置:
  用户修改仓库的各项设定
